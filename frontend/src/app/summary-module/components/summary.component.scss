div.container {
  margin-left: var(--default-gap-px);
  overflow: auto;
  width: var(--element-width);
}

.mat-table {
  overflow-x: scroll;
}

.mat-table-sticky {
  border-right: 0.25px solid black;
}

.mat-row, .mat-header-row {
  box-sizing: border-box;
  display: table-row;
}

.mat-row {
  padding: 0px;
}

.mat-cell,
.mat-header-cell {
  display: table-cell;
  padding-left: calc(var(--base-font) / 4);
  padding-right: calc(var(--base-font) / 4);
}

.mat-header-cell {
  border-bottom: 0.25px solid black;
  color: var(--primary-color-darker);
}

@mixin mat-table-columns($columns) {
  .mat-column- {
    @each $colName, $props in $columns {
      $pc-flex: map-get($props, 'pc-flex');
      &#{$colName} {
        border-right: 0.25px solid black;
        box-sizing: border-box;
        flex: 0 1 $pc-flex;
        justify-content: center;
        overflow-wrap: break-word;
        text-align: center;
        vertical-align: middle;
        white-space: nowrap;
        @if map-has-key($props, 'padding') {
          padding: map-get($props, 'padding');
        }
        @if map-has-key($props, 'color') {
          color: map-get($props, 'color');
        }
        @if map-has-key($props, 'font-weight') {
          font-weight: map-get($props, 'font-weight');
        }
      }
    }
  }
}

@include mat-table-columns((item:
  ( pc-flex: 15%,
    padding: calc(var(--base-font) / 4),
    color: var(--primary-color-darker),
  )));
/* set the number of columns to a maximum possible value - it will work with smaller numbers of columns so no need to edit here if you reduce */
$numberSummaryColumns: 104;
@for $i from 1 through $numberSummaryColumns {
  @include mat-table-columns((wk#{$i}: (pc-flex: 8.5%)));
}

/* style the first column */
@include mat-table-columns(
  (wk0: (
    color: var(--primary-color-darker),
  ))
);

.row-is-even {
  background: rgb(215, 215, 215);
}

.hidden {
  display: none;
}
