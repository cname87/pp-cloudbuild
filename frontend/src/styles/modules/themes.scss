/**
  Custom Theming for Angular Material
 */

/* For more information: https://material.angular.io/guide/theming */
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$primary-palette: (
    50 : #fdede5,
    100 : #fad2bf,
    200 : #f7b495,
    300 : #f4966a,
    400 : #f1804a,
    500 : #ef692a,
    600 : #ed6125,
    700 : #eb561f,
    800 : #e84c19,
    900 : #e43b0f,
    A100 : #ffffff,
    A200 : #ffe3dd,
    A400 : #ffb8aa,
    A700 : #ffa390,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$accent-palette: (
    50 : #e7e7e7,
    100 : #c3c4c4,
    200 : #9c9c9d,
    300 : #747475,
    400 : #565758,
    500 : #38393a,
    600 : #323334,
    700 : #2b2c2c,
    800 : #242425,
    900 : #171718,
    A100 : #6e6ef2,
    A200 : #3f3fee,
    A400 : #0000fb,
    A700 : #0000e1,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #ffffff,
        A200 : #ffffff,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss (imported above). For each palette, you can optionally specify a default, lighter, and darker hue. Available color palettes: https://material.io/design/color/
$primary: mat.define-palette($primary-palette, 500, 200, 700);
$accent: mat.define-palette($accent-palette, 500, 50, 700);
$warn: mat.define-palette(mat.$red-palette, 300, 100, 700);

/* colors for component styling */
$primary-darker: mat.get-color-from-palette($primary, 'darker');
$primary-normal: mat.get-color-from-palette($primary);
$primary-lighter: mat.get-color-from-palette($primary, 'lighter');
$accent-darker: mat.get-color-from-palette($accent, 'darker');
$accent-normal: mat.get-color-from-palette($accent);
$accent-lighter: mat.get-color-from-palette($accent, 'lighter');
$warn-darker: mat.get-color-from-palette($warn, 'darker');
$warn-normal: mat.get-color-from-palette($warn);
$warn-lighter: mat.get-color-from-palette($warn, 'lighter');

/* Define a custom typography config with the default typography levels but referenced to rem with the ratio 16px = 1rem, i.e. if you increase 1rem from 16px default these will scale accordingly */
/* aiming to scale for a min screen size of 360px wide */
$typoConfig: mat.define-typography-config(
  $font-family:   'Roboto, "Helvetica Neue", sans-serif',
  /* each defines font size, line height and font weight */
  $display-4:     mat.define-typography-level(calc(112rem/16), calc(112rem/16), 300, $letter-spacing: -0.05em),
  $display-3:     mat.define-typography-level(calc(56rem/16), calc(56rem/16), 400, $letter-spacing: -0.02em),
  $display-2:     mat.define-typography-level(calc(45rem/16), calc(48rem/16), 400, $letter-spacing: -0.005em),
  $display-1:     mat.define-typography-level(calc(34rem/16), calc(40rem/16), 400),
  $headline:      mat.define-typography-level(calc(24rem/16), calc(32rem/16), 400),
  $title:         mat.define-typography-level(calc(20rem/16), calc(32rem/16), 500),
  $subheading-2:  mat.define-typography-level(calc(16rem/16), calc(28rem/16), 400),
  $subheading-1:  mat.define-typography-level(calc(15rem/16), calc(24rem/16), 400),
  $body-2:        mat.define-typography-level(calc(14rem/16), calc(24rem/16), 500),
  $body-1:        mat.define-typography-level(calc(14rem/16), calc(20rem/16), 400),
  $caption:       mat.define-typography-level(calc(12rem/16), calc(20rem/16), 400),
  $button:        mat.define-typography-level(calc(14rem/16), calc(14rem/16), 500),
  /* line-height must be unit-less fraction of the font-size */
  $input:         mat.define-typography-level(inherit, 1.125, 400),
);

// Create the theme object. A theme consists of configurations for individual theming systems such as "color" or "typography".
$theme: mat.define-light-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  ),
  typography: $typoConfig,
));

/* style core material components with imported theme */
@include mat.core-theme($theme);

// Include theme styles for core and every component.
// Alternatively, you can import and @include the theme mixins for each component that you are using.
@include mat.all-component-themes($theme);
