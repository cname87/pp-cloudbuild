/* Material colors for use on css classes within components */

/* Note: We derive the Material theme colors separate from themes.css as we want to minimise the css size in each component => don't import themes.css into each component but create a minimum css file for component import */
/* Note: We cannot do this is styles.css using css variables, as it appears css variables can only be assigned to a valid css expression */

@use '~@angular/material' as mat;

/* Define the palettes separately from, but the same as in, themes.scss */
$primary: mat.define-palette(mat.$deep-purple-palette, 200, 100, 300);
$accent: mat.define-palette(mat.$amber-palette, 200, 100, 300);
$warn: mat.define-palette(mat.$red-palette, A200, A100, A400);
$content: mat.define-palette(mat.$blue-grey-palette, 100, 50, 200);

/* colors for component styling */
$primary-darker: mat.get-color-from-palette($primary, 'darker');
$primary-normal: mat.get-color-from-palette($primary);
$primary-lighter: mat.get-color-from-palette($primary, 'lighter');
$accent-darker: mat.get-color-from-palette($accent, 'darker');
$accent-normal: mat.get-color-from-palette($accent);
$accent-lighter: mat.get-color-from-palette($accent, 'lighter');
$warn-darker: mat.get-color-from-palette($warn, 'darker');
$warn-normal: mat.get-color-from-palette($warn);
$warn-lighter: mat.get-color-from-palette($warn, 'lighter');
$content-darker: mat.get-color-from-palette($content, 'darker');
$content-normal:  mat.get-color-from-palette($content);
$content-lighter: mat.get-color-from-palette($content, 'lighter');

/* add any styles below that are common across components */

.button {
  min-width: fit-content;
  margin-left: var(--default-gap-px);
  padding-left: var(--list-spacing);
  padding-right: var(--default-gap-px);
  background-color: $primary-lighter;
}

.button:hover:enabled {
  background-color: $primary-darker;
}

.button.warn-button {
  background-color: $warn-lighter;
  }

.button.warn-button:hover:enabled {
  background-color: $warn-darker;
}


/* sets the width for any elements that fill the screen width-wise */
.fill-width {
  width: var(--element-width);
  margin-left: var(--default-gap-px);
}

/* global material components standard styling */

mat-divider.mat-divider {
  margin-top: var(--default-gap-px);
  margin-bottom: var(--default-gap-px);
  margin-left: var(--default-gap-px);
}

mat-progress-bar.mat-progress-bar {
  position: absolute;
  height: 0.5rem;
  top: 0.1rem;
  z-index: 5000;
}
mat-icon.mat-icon {
  vertical-align: middle;
  line-height: 1.5rem;
}
