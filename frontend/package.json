{
  "name": "project-perform-frontend",
  "version": "1.0.0",
  "private": true,
  "description": "Project Perform frontend application.",
  "keywords": [],
  "bugs": {
    "email": "cname87@yahoo.com"
  },
  "license": "MIT",
  "author": "Se√°n A. Young <cname87@yahoo.com>",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/cname87/project-perform-k8es"
  },
  "comments": {
    "scripts": {
      "delDist": "Deletes the './dist' directory",
      "ngBuild:dev": "Build using default environment.ts file, i.e. development configuration",
      "ngBuild:e2e": "Build using environment.e2e.ts file, i.e. e2e test configuration",
      "ngBuild:prod": "Build using environment.prod.ts file, i.e. production configuration",
      "uploadSecretFiles": "Uploads secret files, that are not stored in git to GCP cloud storage",
      "startBackend": "Runs a script on the backend package.json that starts the backend server - using the remote test database",
      "serve:dev": "Serves frontend on 4200 using default environment.ts file, i.e. development configuration, and proxy api-v1/ and testServer/",
      "serve:e2e": "Serves frontend on 4200 using environment.e2e.ts file, i.e. e2e test configuration, and proxy api-v1/ and testServer/",
      "serve:production": "Serves frontend on 4200 using environment.prod.e2e.ts file, i.e. e2e test configuration, and proxy api-v1/ and testServer/",
      "test:dev": "Run the frontend test suite using Chrome",
      "test:staging": "Run the frontend test suite using headless Chrome",
      "e2e:dev": "Run e2e with cache error tests on localhost:4200 proxying to a backend on localhost:8080 - you need to start backend separately",
      "e2e:staging": "Run e2e with cache or error tests on backend:8080 proxying to a backend on backend:8080 - you need to start backend separately",
      "e2e:production": "Run e2e with no cache or error tests on projectperform.com proxying to a backend on projectperform.com - projectperform.com must be up already"
    }
  },
  "scripts": {
    "prettier:app": "prettier --write \"./src/**/*.ts\"",
    "prettier:all": "prettier --write \"./**/*.ts\" \"./**/*.js\"",
    "eslint:app": "eslint --ignore-pattern \"*.spec.ts\" --ext .ts ./src",
    "eslint:spec": "eslint --ext .spec.ts ./src",
    "eslint:dev": "npm-run-all eslint:app eslint:spec",
    "eslint:all": "eslint --ext .js,.ts .",
    "delDist": "ts-node --project ./utils/tsconfig.utils.json ./utils/delDistDir.ts ./dist/",
    "ngBuild:dev": "ng run project-perform:build",
    "ngBuild:e2e": "ng run project-perform:build:e2eTest",
    "ngBuild:prod": "ng run project-perform:build:production",
    "uploadSecretFiles": "ts-node ./utils-build/syncGCPStorage.ts",
    "build:dev": "npm-run-all prettier:all eslint:all delDist ngBuild:dev uploadSecretFiles",
    "build:e2e": "npm-run-all prettier:all eslint:dev delDist ngBuild:e2e ",
    "build:prod": "npm-run-all prettier:all eslint:app delDist ngBuild:prod",
    "startBackend": "cd ../backend && npm run checkServer",
    "serve:dev": "ng run project-perform:serve",
    "serve:e2e": "ng run project-perform:serve:e2eTest",
    "serve:production": "ng run project-perform:serve:production",
    "serveDevWithBackend": "npm-run-all startBackend serve:dev",
    "test:dev": "ng run project-perform:test:dev",
    "test:staging": "ng run project-perform:test:staging",
    "e2e:dev": "cross-env E2E=development ng run project-perform:e2e:dev",
    "e2eDevWithBackend": "npm-run-all startBackend e2e:dev",
    "e2e:staging": "cross-env E2E=staging ng run project-perform:e2e:staging",
    "e2e:production": "cross-env E2E=production ng run project-perform:e2e:production"
  },
  "dependencies": {
    "@angular/animations": "^10.0.3",
    "@angular/cdk": "^10.0.1",
    "@angular/common": "^10.0.3",
    "@angular/compiler": "^10.0.3",
    "@angular/core": "^10.0.3",
    "@angular/flex-layout": "^10.0.0-beta.32",
    "@angular/forms": "^10.0.3",
    "@angular/material": "^10.0.1",
    "@angular/platform-browser": "^10.0.3",
    "@angular/platform-browser-dynamic": "^10.0.3",
    "@angular/router": "^10.0.3",
    "@angular/upgrade": "^10.0.3",
    "@auth0/auth0-spa-js": "^1.10.0",
    "@service-work/is-loading": "^3.0.3",
    "core-js": "^3.6.5",
    "http-status-codes": "^1.4.0",
    "ngx-logger": "^4.1.9",
    "ngx-toastr": "^12.1.0",
    "rollbar": "^2.18.0",
    "rxjs": "^6.6.0",
    "zone.js": "^0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.1000.1",
    "@angular-devkit/core": "^10.0.1",
    "@angular/cli": "^10.0.1",
    "@angular/compiler-cli": "^10.0.3",
    "@angular/platform-server": "^10.0.3",
    "@google-cloud/storage": "^5.1.1",
    "@types/jasmine": "^3.5.11",
    "@types/jasminewd2": "^2.0.8",
    "@types/node": "^14.0.20",
    "@types/protractor-browser-logs": "^1.0.10",
    "@types/request-promise-native": "^1.0.17",
    "@types/rimraf": "^3.0.0",
    "@typescript-eslint/eslint-plugin": "^3.6.0",
    "@typescript-eslint/parser": "^3.6.0",
    "cross-env": "^7.0.2",
    "dotenv": "^8.2.0",
    "eslint": "^7.4.0",
    "eslint-config-airbnb-base": "^14.2.0",
    "eslint-config-airbnb-typescript": "^8.0.2",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-prettier": "^3.1.4",
    "find-up": "^4.1.0",
    "fs": "0.0.2",
    "jasmine-core": "^3.5.0",
    "jasmine-reporters": "^2.3.2",
    "jasmine-spec-reporter": "~5.0.2",
    "karma": "^5.1.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.3",
    "karma-jasmine": "~3.3.1",
    "karma-jasmine-html-reporter": "^1.5.4",
    "node-sass": "^4.14.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "protractor": "^7.0.0",
    "protractor-browser-logs": "^1.0.456",
    "protractor-html-reporter": "^1.3.2",
    "puppeteer": "^5.0.0",
    "request": "^2.88.2",
    "request-promise-native": "^1.0.8",
    "rimraf": "^3.0.2",
    "sleep-ms": "^2.0.1",
    "ts-node": "^8.10.2",
    "typescript": "^3.9.6",
    "wait-on": "^5.0.3",
    "webdriver-manager": "^12.1.7"
  },
  "optionalDependencies": {}
}
